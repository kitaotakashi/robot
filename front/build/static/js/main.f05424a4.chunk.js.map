{"version":3,"sources":["components/Auth/Auth0ProviderWithHistory.tsx","stores/units.ts","stores/unit.ts","stores/index.ts","components/Auth/ProtectedRoute.tsx","theme.ts","components/Layout/styles.tsx","components/Navigation/SideDrawer/styles.tsx","components/Navigation/SideDrawer/SideDrawerHeader.tsx","components/Navigation/NavigationList/NavigationList.tsx","components/Auth/AuthButton.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","components/Layout/Layout.tsx","components/UI/SearchBar/styles.tsx","components/UI/SearchBar/SearchBar.tsx","components/UI/ToggleMenu/ToggleMenu.tsx","components/UI/IndexToolbar/IndexToobar.tsx","components/BatteryUnit/Units/styles.tsx","components/Icon/BatteryIcon/BatteryIcon.tsx","components/BatteryUnit/Units/UnitCard.tsx","containers/BatteryUnit/Units/styles.tsx","containers/BatteryUnit/Units/Units.tsx","components/BatteryUnit/Unit/styles.tsx","components/BatteryUnit/Unit/InfoItem.tsx","components/BatteryUnit/Unit/UnitInfo.tsx","components/BatteryUnit/Unit/UnitPerformance.tsx","components/BatteryUnit/Unit/CustomerInfo.tsx","components/BatteryUnit/Unit/LocationMap.tsx","containers/BatteryUnit/Unit/Unit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","initialState","units","isFetching","lastUpdated","undefined","error","unitsSlice","createSlice","name","reducers","getUnitsRequest","state","getUnitsSuccess","action","payload","map","unit","id","unit_id","requiredAction","required_action","profile","productTypeName","modelNumber","unit_type","isCharging","is_charging","isPowerOn","is_working","soc","Date","now","getUnitsFailure","actions","errorCode","latitude","longitude","status","soh","capacity","current","voltage","timestamps","registeredAt","lastUpdatedAt","customerId","unitSlice","getUnitRequest","getUnitSuccess","error_code","Int32","purpose","time","customer","account_id","getUnitFailure","rootReducer","combineReducers","unitsReducer","unitReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ProtectedRoute","component","args","withAuthenticationRequired","theme","createMuiTheme","palette","primary","main","light","secondary","shape","Div","styled","div","Main","props","spacing","transitions","create","easing","sharp","duration","leavingScreen","drawerWidth","isOpen","easeOut","enteringScreen","StyledAppBar","AppBar","StyledIconButton","IconButton","StyledDrawer","Drawer","useStyles","makeStyles","createStyles","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","SideDrawerHeader","classes","className","NavigationItems","text","icon","link","NavigationList","List","item","ListItem","Link","to","key","ListItemIcon","ListItemText","AuthButton","useAuth0","isAuthenticated","loginWithRedirect","logout","Button","variant","onClick","drawerPaper","width","SideDrawer","position","Toolbar","color","aria-label","drawerOpener","edge","Typography","noWrap","anchor","open","paper","drawerCloser","Layout","React","useState","setOpen","CssBaseline","SearchBar","borderRadius","common","white","breakpoints","up","StyledSearchIcon","SearchIcon","SearchInput","InputBase","placeholder","inputProps","ToggleMenu","anchorRef","useRef","handleClose","event","contains","target","handleListKeyDown","preventDefault","prevOpen","useEffect","focus","menuItemList","menuItems","menuItem","MenuItem","ref","aria-controls","aria-haspopup","disableElevation","startIcon","buttonIcon","buttonText","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","IndexToolbar","toggleMenuItemList","sortMenuItemList","filterMenuItemList","Grid","container","justify","xs","md","lg","UnitCard","Card","UnitCardContent","CardContent","UnitId","h1","ModelNumber","p","Status","a","OtherInfo","SOC","setBatteryIcon","size","htmlColor","BatteryIconBase","BatteryFull","withComponent","BatteryFullIcon","Battery90","Battery90Icon","Battery80","Battery80Icon","Battery60","Battery60Icon","Battery50","Battery50Icon","Battery30","Battery30Icon","Battery20","Battery20Icon","BatteryAlert","BatteryAlertIcon","BatteryIcon","toString","CardHeader","title","titleTypographyProps","align","RouterLink","Units","dispatch","useDispatch","useSelector","console","log","axios","get","then","res","data","catch","err","unitsList","sm","IndexToobar","InfoPaper","Header","h2","Key","h4","Value","h3","InfoItem","itemKey","UnitInfo","UnitPerformance","CustomerInfo","companyName","industry","personnelName","email","phoneNumber","AnyReactComponent","LocationMap","height","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","Unit","match","params","fetchUnit","unitDetail","alertMessage","Alert","severity","withRouter","routes","exact","path","StylesProvider","injectFirst","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f05424a4.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory: React.FC = ({ children }) => {\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState: any) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN!}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID!}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","import axios from 'axios';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Dispatch } from 'redux';\nimport { UnitSummary } from '../types/unit';\n// import { useAuth0 } from '@auth0/auth0-react';\n\ninterface UnitsState {\n    units: UnitSummary[],\n    isFetching: boolean,\n    lastUpdated: number | undefined,\n    error: Error | undefined,\n}\n\nconst initialState: UnitsState = {\n    units: [],\n    isFetching: false,\n    lastUpdated: undefined,\n    error: undefined,\n};\n\nconst unitsSlice = createSlice({\n    name: 'units',\n    initialState,\n    reducers: {\n        // there are 3 addional reducers\n        // getUnitsRequest: set state \"isFetching\" True\n        getUnitsRequest: (state) => {state.isFetching = true},\n        // getUnitsSuccess: set state \"isFetching\" False, set timestamp to lastUpdated, and set fetched data to units\n        getUnitsSuccess: (state, action) => {\n            state.units = action.payload.map((unit: any) => ({\n                    id: unit.unit_id,\n                    requiredAction: unit.required_action,\n                    profile: {\n                    productTypeName: \"null\",\n                    modelNumber: unit.profile.unit_type,\n                    location: unit.profile.location,\n                    },\n                    isCharging: unit.is_charging,\n                    isPowerOn: unit.is_working,\n                    soc: unit.soc,\n            }))\n            // state.units = []\n            state.isFetching = false\n            state.lastUpdated = Date.now()\n            state.error = undefined\n        },\n        // getUnitsFailure: set state \"isFetching\" False and return error\n        getUnitsFailure: (state, action) => {\n            state.isFetching = true\n            state.error = action.payload\n        },\n    }\n});\n\n\n\n// const {\n//     getAccessTokenSilently\n// } = useAuth0();\n\nexport default unitsSlice.reducer;\nexport const { getUnitsRequest, getUnitsSuccess, getUnitsFailure } = unitsSlice.actions;\n\nexport const initUnits = () => {\n    return async function(dispatch: Dispatch) {\n        try{\n            dispatch(getUnitsRequest())\n            return axios.get(`https://jugem.live/api/v1/units/`)\n            .then(res =>\n                {\n                    dispatch(getUnitsSuccess(res.data))\n                }\n            ).catch(err => \n                {\n                    console.log(err)\n                    dispatch(getUnitsFailure(err))\n                }\n            )\n        } catch (err){\n            console.log(err)\n        }\n    }\n}\n\n/*\nexport const initUnits = () => async (dispatch: Dispatch) => {\n    console.log(\"me called\");\n    try {\n        // const token = await getAccessTokenSilently();\n        // Send a GET request to the server and add the signed in user's\n        // access token in the Authorization header\n        const response = await fetch(\"https://jugem.live/api/v1/units/\", {\n        //   headers: {\n        //     Authorization: `Bearer ${token}`,\n        //   },\n        });\n        const responseData = await response.json();\n\n   */","import axios from 'axios';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { Dispatch } from 'redux';\nimport { UnitDetail } from '../types/unit';\n\ninterface UnitState {\n    unit: UnitDetail,\n    isFetching: boolean,\n    lastUpdated: number | undefined,\n    error: Error | undefined,\n}\n\nconst initialState: UnitState = {\n    unit: {\n        id: '',\n        errorCode: 0,\n        requiredAction: undefined,\n        profile: {\n            modelNumber: '',\n            productTypeName: '',\n            location: {\n                latitude: 0,\n                longitude: 0\n            },\n        },\n        status: {\n            isCharging: false,\n            isPowerOn: false,\n            soc: 0,\n            soh: 0,\n            capacity: 0,\n            current: 0,\n            voltage: 0,\n        },\n        timestamps: {\n            registeredAt: new Date(0),\n            lastUpdatedAt: new Date(0),\n        },\n        customerId: '',\n    },\n    isFetching: false,\n    lastUpdated: undefined,\n    error: undefined,\n};\n\nconst unitSlice = createSlice({\n    name: 'unit',\n    initialState,\n    reducers: {\n        getUnitRequest: (state) => {state.isFetching = true},\n        // to be modified so that response fits to state.unit\n        getUnitSuccess: (state, action) => {\n            state.unit = {\n                id: action.payload.unit.unit_id,\n                errorCode: action.payload.unit.error_code.Int32,\n                requiredAction: undefined,\n                profile: {\n                    modelNumber: action.payload.unit.unit_type,\n                    productTypeName: action.payload.unit.purpose,\n                    location: {\n                        latitude: action.payload.unit.latitude,\n                        longitude: action.payload.unit.longitude\n                    },\n                },\n                status: {\n                    isCharging: action.payload.is_charging,\n                    isPowerOn: false,\n                    soc: action.payload.unit.soc,\n                    soh: action.payload.unit.soh,\n                    capacity: action.payload.unit.capacity,\n                    current: action.payload.unit.current,\n                    voltage: action.payload.unit.voltage,\n                },\n                timestamps: {\n                    registeredAt: new Date(0),\n                    lastUpdatedAt: action.payload.unit.time,\n                },\n                customerId: action.payload.customer.account_id,\n            }\n            state.isFetching = false\n        },\n        getUnitFailure: (state, action) => {\n            state.isFetching = true\n            state.error = action.payload\n        },\n    }\n});\n\nexport default unitSlice.reducer;\nexport const { getUnitRequest, getUnitSuccess, getUnitFailure  } = unitSlice.actions;\n\n// define fetchUnit\n// take id as a parameter, and fetch the corresponding unit data from FireStore\n// if it doesn't exist in server, return error\n\nexport const fetchUnit = (id: string) => {\n    console.log(\"in init units\");\n    return async function(dispatch: Dispatch) {\n        try{\n            console.log(\"dispatching getUnitsRequest\");\n            dispatch(getUnitRequest())\n            return axios.get(`https://jugem.live/api/v1/detaile?unit_id=` + id)\n            .then(res =>\n                {\n                    console.log(res.data)\n                    dispatch(getUnitSuccess(res.data[0]))\n                }\n            ).catch(err => \n                {\n                    console.log(err)\n                    dispatch(getUnitFailure(err))\n                }\n            )\n        } catch (err){\n            console.log(err)\n        }\n    }\n}","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport unitsReducer from './units';\nimport unitReducer from './unit';\n\nconst rootReducer = combineReducers({\n    units: unitsReducer,\n    unit: unitReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nconst store = configureStore({ \n    reducer: rootReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: false,\n    }),\n});\n\nexport default store;","import { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport function ProtectedRoute({ component, ...args }: any) {\n  return (\n    <Route component={withAuthenticationRequired(component, {})} {...args} />\n  );\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // blacky\n            main: '#000000',\n            light: '#242423'\n        },\n        secondary: {\n            // yellow\n            main: '#f5cb5c'\n        },\n        error: {\n            main: '#dd1c1a'\n        },\n    },\n    shape: {\n        // borderRadius: 20,\n    }\n});\n\nexport default theme;","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    display: flex;\n`;\n\nexport const Main = styled.main<{isOpen: boolean, drawerWidth: number}>`\n    flex-grow: 1;\n    padding: ${props => props.theme.spacing(3)}px;\n    transition: ${\n        props => props.theme.transitions.create('margin', {\n                 easing: props.theme.transitions.easing.sharp,\n                 duration: props.theme.transitions.duration.leavingScreen,\n        })\n    };\n    margin-left: -${props => props.drawerWidth}px;\n    ${props => props.isOpen && `\n        transition: ${\n            props.theme.transitions.create('margin', {\n            easing: props.theme.transitions.easing.easeOut,\n            duration: props.theme.transitions.duration.enteringScreen,\n            })\n        };\n        margin-left: 0;\n    `}\n`;","import styled from 'styled-components';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport AppBar from '@material-ui/core/AppBar';\n\nexport const StyledAppBar = styled(AppBar)<{\n    isOpen: boolean,\n    drawerWidth: number, \n   }>\n`\n    transition: ${\n        props => props.theme.transitions.create(['margin', 'width'], {\n        easing: props.theme.transitions.easing.sharp,\n        duration: props.theme.transitions.duration.leavingScreen,\n        })\n    };\n    ${props => props.isOpen && `\n        width: calc(100% - ${props.drawerWidth}px);\n        margin-left: ${props.drawerWidth}px;\n        transition: ${\n        props.theme.transitions.create(['margin', 'width'], {\n            easing: props.theme.transitions.easing.easeOut,\n            duration: props.theme.transitions.duration.enteringScreen,\n            })\n        };\n    `}\n`;\n\nexport const StyledIconButton = styled(IconButton)<{isOpen: boolean}>`\n    margin-right: ${props => props.theme.spacing(2)}px;\n    ${ ({isOpen})  => isOpen && `\n        display: none;\n    `}\n`;\n\nexport const StyledDrawer = styled(Drawer)<{drawerWidth: number}>`\n    width: ${({ drawerWidth }) => drawerWidth}px;\n    flex-shrink: 0;\n`;","import React from 'react';\n// import styled from 'styled-components';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n          }, \n    }),\n    );\n\nconst SideDrawerHeader: React.FC = (props) => {\n    const classes = useStyles();\n    // const theme = useTheme();\n    return (\n        <div className={classes.drawerHeader}>\n            {props.children}\n        </div>\n    );\n}\n\n// const $DrawerHeader = styled.div.attrs(props => ({\n//     ...props.theme.mixins.toolbar,\n// }))`\n//     display: flex;\n//     align-items: center;\n//     padding: ${props => props.theme.spacing(0, 1)};\n//     justify-content: flex-end;\n// `;\n\nexport default SideDrawerHeader;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { CarBattery as BatteryIcon } from 'mdi-material-ui';\n// import RoomIcon from '@material-ui/icons/Room';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from 'react-router-dom';\n\ninterface NavigationItem{\n    text: string;\n    icon: JSX.Element;\n    link: string;\n}\n\nconst NavigationItems: NavigationItem[] = [\n    {\n        text: 'Home',\n        icon: <HomeIcon />,\n        link: '/',\n    },\n    // {\n    //     text: 'Map',\n    //     icon: <RoomIcon />,\n    //     link: '/',\n    // },\n    {\n        text: 'Battery Unts',\n        icon: <BatteryIcon />,\n        link: '/units',\n    },\n    { \n        text:'Customers',\n        icon: <ContactsIcon />,\n        link: '/',\n    },\n    {\n        text:'Add Customer',\n        icon: <PersonAddIcon />,\n        link: '/',\n    }\n];\n\nconst NavigationList: React.FC = () => (\n    <List>\n         {NavigationItems.map((item) => (\n            <ListItem component={Link} to={item.link} key={item.text} >\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n            </ListItem>\n            ))}\n    </List>\n);\n\nexport default NavigationList;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button from '@material-ui/core/Button';\n\nfunction AuthButton(props: any) {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return !isAuthenticated ? (\n    <Button onClick={loginWithRedirect}>Log in</Button>\n  ) : (<Button\n        variant=\"outline-primary\"\n        onClick={() => {\n            logout({ returnTo: window.location.origin });\n        }}\n        {...props}\n        >\n        Log out\n    </Button>);\n}\n\nexport default AuthButton;","import React from 'react';\nimport * as S from './styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SideDrawerHeader from './SideDrawerHeader';\nimport NavigationList from '../NavigationList/NavigationList';\nimport AuthButton from '../../Auth/AuthButton';\n// import LoginButton from '../../Auth/LoginButton';\n\n\ntype Props = {\n    drawerWidth: number;\n    isOpen: boolean;\n    drawerOpener: () => void;\n    drawerCloser: () => void;\n}\n\nconst useStyles = makeStyles({\n    drawerPaper: {\n        width: (props: Props) => props.drawerWidth,\n    },\n})\n\nconst SideDrawer: React.FC<Props> = (props) => {\n    const classes = useStyles(props);\n\n    return (\n        <>\n            <S.StyledAppBar\n              position=\"fixed\"\n              drawerWidth={props.drawerWidth}\n              isOpen={props.isOpen}\n            >\n                <Toolbar>\n                    <S.StyledIconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={props.drawerOpener}\n                        edge=\"start\"\n                        isOpen={props.isOpen}\n                    >\n                        <MenuIcon />\n                    </S.StyledIconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        RoBOT\n                    </Typography>\n                </Toolbar>\n            </S.StyledAppBar>\n            <S.StyledDrawer\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={props.isOpen}\n                drawerWidth={props.drawerWidth}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <SideDrawerHeader>\n                    <IconButton onClick={props.drawerCloser}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </SideDrawerHeader>\n                <AuthButton />\n                <NavigationList />\n            </S.StyledDrawer>\n        </>\n    );\n}\n\nexport default SideDrawer;","import React from 'react';\nimport * as S from './styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport SideDrawerHeader from '../Navigation/SideDrawer/SideDrawerHeader';\n\nconst drawerWidth = 240;\n\nconst Layout: React.FC = ( props ) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return(\n        <S.Div>\n            <CssBaseline />\n            <SideDrawer\n                isOpen={open}\n                drawerOpener={handleDrawerOpen}\n                drawerCloser={handleDrawerClose}\n                drawerWidth={drawerWidth}\n            />\n            <S.Main\n              isOpen={open}\n              drawerWidth={drawerWidth}\n            >\n                <SideDrawerHeader />\n                {props.children}\n            </S.Main>\n        </S.Div>\n    );\n}\n\nexport default Layout;","import styled from 'styled-components';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport const SearchBar = styled.div`\n    position: relative;\n    border-radius: ${props => props.theme.shape.borderRadius}px;\n    border: 1px solid ${props=> props.theme.palette.primary.light};\n    background-color: ${props => props.theme.palette.common.white};\n    margin: auto;\n    width: 100%;\n    /* margin: ${props => props.theme.spacing(0, 0, 0, 2)}; */\n    ${props => props.theme.breakpoints.up('md')}{\n        margin-left: ${props => props.theme.spacing(1)}px;\n        width: auto;\n    }\n`;\n\nexport const StyledSearchIcon = styled(SearchIcon)`\n    margin: ${props=> props.theme.spacing(0, 0, 0, 2)};\n    height: 100%;\n    position: absolute;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const SearchInput = styled(InputBase)`\n    color: inherit;\n    padding: ${props => props.theme.spacing(1, 0, 1, 0)};\n    padding-left: ${props => `calc(1em + ${props.theme.spacing(4)}px)`};\n    transition: ${props => props.theme.transitions.create('width')};\n    width: 100%;\n`;","import React from 'react';\nimport * as S from './styles';\n\nconst SearchBar: React.FC = (props) => (\n    <S.SearchBar>\n        <S.StyledSearchIcon color=\"primary\" />\n        <S.SearchInput\n                placeholder=\"Search by ID\"\n                inputProps={{ 'aria-label': 'search' }}\n        />\n    </S.SearchBar>\n);\n\nexport default SearchBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\ntype Props = {\n    buttonText: string;\n    buttonIcon: JSX.Element;\n    menuItems: Array<string>;\n}\n\nconst ToggleMenu: React.FC<Props> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n        return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpen(false);\n        }\n      }\n    \n      // return focus to the button when we transitioned from !open -> open\n      const prevOpen = React.useRef(open);\n      React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n          anchorRef.current!.focus();\n        }\n    \n        prevOpen.current = open;\n      }, [open]);\n\n    const menuItemList = props.menuItems.map(menuItem => {\n        return (\n            <MenuItem onClick={handleClose}>{menuItem}</MenuItem>\n        );\n    });\n\n    return (\n        <>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"primary\"\n                variant=\"outlined\"\n                disableElevation\n                startIcon={props.buttonIcon}\n            >\n               {props.buttonText}\n            </Button>\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                    {...TransitionProps}\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    {menuItemList}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </>\n    );\n}\n\nexport default ToggleMenu;","import React from 'react';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport ToggleMenu from '../ToggleMenu/ToggleMenu';\n\n// Component\nconst IndexToolbar: React.FC = () => {\n    const toggleMenuItemList = {\n        sortMenuItemList: ['ID', 'Customer', 'Status'],\n        filterMenuItemList: ['ID', 'Customer', 'Status'],\n    }\n\n    return(\n        // <Toolbar>\n            <Grid container justify=\"center\" spacing={1}>\n                <Grid item xs={12} md={6}>\n                    <SearchBar />\n                </Grid>\n                <Grid item xs md>\n                    <ToggleMenu\n                        buttonText='Sort by'\n                        buttonIcon={<ImportExportIcon />}\n                        menuItems={toggleMenuItemList.sortMenuItemList}               \n                    />\n                </Grid>\n                <Grid item xs md>\n                    <ToggleMenu\n                        buttonText='Filter by'\n                        buttonIcon={<FilterListIcon />}\n                        menuItems={toggleMenuItemList.filterMenuItemList}               \n                    />\n                </Grid>\n                <Grid item md={2} lg={3} />\n            </Grid>\n        // </Toolbar>\n    );\n}\n\nexport default IndexToolbar;","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n// styled-components\nexport const UnitCard = styled(Card)<{requiredAction: string | undefined}>`\n    border: ${({requiredAction}) => (requiredAction === undefined ? 'inherit' : '1px solid red')};\n    margin: 10px auto;\n    padding: 3px 14px;\n    max-width: 345px;\n`;\n\nexport const UnitCardContent = styled(CardContent)`\n    display: flex;\n    flex: 1 0 auto;\n`;\n\nexport const UnitId = styled.h1`\n    font-size: 18px;\n    font-weight: 700;\n    margin: 0;\n`;\n\nexport const ModelNumber = styled.p`\n    font-size: 12px;\n    color: gray;\n    margin: 0;\n    padding-left: 2px;\n`;\n\nexport const Status = styled.a<{status: boolean}>`\n    border-radius: 3px;\n    width: 50%;\n    padding: 2px 5px;\n    background: transparent;\n    color: ${({status}) => status ? 'lightgreen' : 'gray'};\n    border: 2px solid ${({status}) => status ? 'lightgreen' : 'gray'};\n`;\n\nexport const OtherInfo = styled.p`\n    font-size: 16px;\n    font-weight: 700;\n`;\n\nexport const SOC = styled.div`\n    text-align: center;\n    margin: auto;\n    padding-left: 20px;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull';\nimport Battery90Icon from '@material-ui/icons/Battery90';\nimport Battery80Icon from '@material-ui/icons/Battery80';\nimport Battery60Icon from '@material-ui/icons/Battery60';\nimport Battery50Icon from '@material-ui/icons/Battery50';\nimport Battery30Icon from '@material-ui/icons/Battery30';\nimport Battery20Icon from '@material-ui/icons/Battery20';\nimport BatteryAlertIcon from '@material-ui/icons/BatteryAlert';\n\ntype Props = {\n    soc: number;\n    size: number;\n}\n\nconst BatteryIcon: React.FC<Props> = (props) => setBatteryIcon(props.soc, props.size);\n\nconst setBatteryIcon = (soc: number, size: number) => {\n    if (soc >=  95) {\n        return <BatteryFull htmlColor=\"green\" size={size} />;\n    } else if(soc >= 85) {\n        return <Battery90  htmlColor=\"green\" size={size} />;\n    } else if (soc >= 75) {\n        return <Battery80  htmlColor=\"lightgreen\" size={size} />;\n    } else if (soc >= 55) {\n        return <Battery60  htmlColor=\"lightgreen\" size={size} />;\n    } else if (soc >= 45) {\n        return <Battery50  htmlColor=\"yellow\" size={size} />;\n    } else if (soc >= 25) {\n        return <Battery30 htmlColor=\"orange\" size={size} />;\n    } else if (soc >= 10) {\n        return <Battery20  htmlColor=\"red\" size={size}/>;\n    } else {\n        return <BatteryAlert  htmlColor=\"red\" size={size} />;\n    };\n}\n\nconst BatteryIconBase = styled.div<{size: number}>`\n    font-size: ${({size}) => size}px;\n`;\n\nconst BatteryFull = BatteryIconBase.withComponent(BatteryFullIcon);\n\nconst Battery90 = BatteryIconBase.withComponent(Battery90Icon);\n\nconst Battery80 = BatteryIconBase.withComponent(Battery80Icon);\n\nconst Battery60 = BatteryIconBase.withComponent(Battery60Icon);\n\nconst Battery50 = BatteryIconBase.withComponent(Battery50Icon);\n\nconst Battery30 = BatteryIconBase.withComponent(Battery30Icon);\n\nconst Battery20 = BatteryIconBase.withComponent(Battery20Icon);\n\nconst BatteryAlert = BatteryIconBase.withComponent(BatteryAlertIcon);\n\nexport default BatteryIcon;","import React from 'react';\nimport { UnitSummary } from '../../../types/unit';\nimport * as S from './styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport BatteryIcon from '../../Icon/BatteryIcon/BatteryIcon';\nimport axios from 'axios';\n\nconst UnitCard: React.FC<UnitSummary> = (props) => {\n    \n    let location: string = 'location: ' + props.profile.location.latitude.toString() + '...';\n    // getAddressFromGeoLocation(props.geoLocation.latitude, props.geoLocation.longitude)\n    // .then(res => { \n    //     location = res;\n    //     console.log('location: ' + location); \n    // });\n    \n    return (\n        <S.UnitCard requiredAction={props.requiredAction}>\n            <CardHeader\n                title={props.requiredAction}\n                titleTypographyProps={{\n                    align: 'center',\n                    variant: 'body1',\n                    color: 'error',\n                }}\n            />\n            <S.UnitCardContent>\n                <div>\n                    <S.UnitId>{props.id}</S.UnitId>\n                    <S.ModelNumber>{props.profile.modelNumber}</S.ModelNumber>\n                    <S.OtherInfo>{props.profile.productTypeName}</S.OtherInfo>\n                    <S.OtherInfo>{location}</S.OtherInfo>\n                    <S.Status status={props.isPowerOn}>{props.isPowerOn ? 'ON' : 'OFF'}</S.Status>\n                </div>\n                <S.SOC>\n                    {/* styled-components aren't working for SOCIcon */}\n                    <BatteryIcon soc={props.soc} size={80}/>\n                    <S.OtherInfo>{props.soc}%</S.OtherInfo>\n                </S.SOC>\n            </S.UnitCardContent>\n        </S.UnitCard>\n    );\n}\n\n\nconst getAddressFromGeoLocation = async (lat: number, lng: number) => {\n    const input: string =  lat.toString() + ',' + lng.toString();\n    const location: string = await axios.get(\n        'https://maps.googleapis.com/maps/api/geocode/json',\n        {\n            params: {\n                latlng:input,\n                key: 'AIzaSyDGVrzNW2FhUWk0-ompNE_KNcJdUT9_z4c',\n            },\n        }\n    )\n    .then((result) => {\n        console.log(result.data.results);\n        return result.data.results[6].formatted_address;\n    })\n    .catch(error => {\n        // console.log(error);\n        return 'error';\n    })\n    console.log(location);\n    return location;\n}\n\nexport default UnitCard;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const RouterLink = styled(Link)`\n    text-decoration: none;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../stores/';\nimport { initUnits } from '../../../stores/units';\nimport Grid from '@material-ui/core/Grid';\nimport IndexToobar from '../../../components/UI/IndexToolbar/IndexToobar';\nimport UnitCard from '../../../components/BatteryUnit/Units/UnitCard';\nimport * as S from './styles';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Component\nconst Units: React.FC = () => {\n    const dispatch = useDispatch();\n    const units = useSelector((state: RootState) => state.units.units);\n\n    // const {\n    //     getAccessTokenSilently\n    // } = useAuth0();\n\n    useEffect(() => {\n        console.log('units data should be fetched at this point');\n        dispatch(initUnits());\n    }, []);\n\n    // useEffect(() => {\n    //     // const getUnits = async() =>{\n    //     //     try {\n    //     //         const token = await getAccessTokenSilently();\n    //     //         console.log('units data should be fetched at this point');\n    //     //         dispatch(initUnits(token));\n    //     //     } catch (error) {\n    //     //         console.error(error);\n    //     //     }\n    //     // };\n    //     // getUnits();\n    // }, []);\n\n    const unitsList = units.map(unit => {\n        return (\n            <Grid item xs={12} sm={6} md={4} key = {unit.id}>\n                <S.RouterLink to={`/units/${unit.id}`}>\n                    <UnitCard\n                        id = {unit.id}\n                        requiredAction = {unit.requiredAction}\n                        profile = {unit.profile}\n                        isPowerOn = {unit.isPowerOn}\n                        isCharging = {unit.isCharging}\n                        soc = {unit.soc}\n                    />\n                </S.RouterLink>\n            </Grid>\n        );\n    });\n\n    return(\n        <>\n            <IndexToobar />\n            <Grid container spacing={1}>\n                {unitsList}\n            </Grid>\n        </>\n    );\n}\n\nexport default Units;","import styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\n\nexport const InfoPaper = styled(Paper)`\n    /* text-align: center; */\n    margin: auto;\n    padding: 20px;\n`;\n\nexport const Header = styled.h2`\n    font-size: 20px;\n    margin:0;\n`;\n\nexport const Key = styled.h4`\n    font-size: 14px;\n    color: gray;\n`;\n\nexport const Value = styled.h3`\n    font-size: 17px;\n    word-wrap: break-word;\n`;\n\nexport const Status = styled.h3<{status: boolean}>`\n    border-radius: 3px;\n    width: 55%;\n    text-align: center;\n    padding: 2px 5px;\n    background: transparent;\n    color: ${({status}) => status ? 'lightgreen' : 'gray'};\n    border: 2px solid ${({status}) => status ? 'lightgreen' : 'gray'};\n`;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\n\ntype Props = {\n    itemKey: string;\n    // itemValue: string;\n};\n\nconst InfoItem: React.FC<Props> = (props) => {\n    return (\n        <>\n        <Grid item xs={5}>\n            <S.Key>{props.itemKey}</S.Key>\n        </Grid>\n        <Grid item xs={7}>\n            {props.children}\n        </Grid>\n        </>\n    );\n}\n\nexport default InfoItem;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport InfoItem from './InfoItem';\n\ntype UnitInfoProps = {\n    requiredAction: string | undefined;\n    id: string;\n    modelNumber: string;\n    productTypeName: string;\n    isPowerOn: boolean;\n};\n\nconst UnitInfo: React.FC<UnitInfoProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Unit Info</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"ID\">\n                    <S.Value>{props.id}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Model Numbe\">\n                    <S.Value>{props.modelNumber}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Product Type\">\n                    <S.Value>{props.productTypeName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Battery Status\">\n                    <S.Status status={props.isPowerOn}>{props.isPowerOn? 'ON' : 'Off' }</S.Status>\n                </InfoItem>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default UnitInfo;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport BatteryIcon from '../../Icon/BatteryIcon/BatteryIcon';\nimport InfoItem from './InfoItem';\n\ntype UnitPerformanceProps = {\n    isCharging: boolean;\n    soc: number;\n    soh: number;\n    capacity: number;\n    current: number;\n    voltage: number;\n};\n\nconst UnitPerformance: React.FC<UnitPerformanceProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Unit Performance</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"Capacity\">\n                    <S.Value>{props.capacity} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Current\">\n                    <S.Value>{props.current} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Voltage\">\n                    <S.Value>{props.voltage} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"SoC\">\n                    <S.Value>\n                        <Grid container spacing={0}>\n                            <Grid item xs={5}>\n                                <BatteryIcon soc={props.soc} size={60} />\n                            </Grid>\n                            <Grid item xs={7}>\n                                <S.Value>{props.soc}%</S.Value>\n                            </Grid>\n                        </Grid>\n                    </S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"SoH\">\n                    <S.Value>\n                        <Grid container spacing={0}>\n                            <Grid item xs={5}>\n                                <BatteryIcon soc={props.soh} size={60} />\n                            </Grid>\n                            <Grid item xs={7}>\n                                <S.Value>{props.soh}%</S.Value>\n                            </Grid>\n                        </Grid>\n                    </S.Value>\n                </InfoItem>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default UnitPerformance;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport InfoItem from './InfoItem';\nimport Button from '@material-ui/core/Button';\n\ntype CustomerInfoProps = {\n    companyName: string;\n    industry: string;\n    personnelName: string;\n    email: string;\n    phoneNumber: string;\n};\n\nconst CustomerInfo: React.FC<CustomerInfoProps> = (props) => {\n    // fetchCustomer should be here and props above should be managed in state\n\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <S.Header>Customer Info</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"Company\">\n                    <S.Value>{props.companyName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Industry\">\n                    <S.Value>{props.industry}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Personnel\">\n                    <S.Value>{props.personnelName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Email\">\n                    <S.Value>{props.email}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Phone Number\">\n                    <S.Value>{props.phoneNumber}</S.Value>\n                </InfoItem>\n                <Grid item xs={6}>\n                    <Button variant=\"contained\" color=\"primary\">\n                        Customer Detail\n                    </Button>\n                </Grid>\n                <Grid item xs={6}> \n                    <Button variant=\"contained\" color=\"secondary\">\n                        View Contract\n                    </Button>\n                </Grid>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default CustomerInfo;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GoogleMapReact from 'google-map-react';\nimport * as S from './styles';\nimport { GeoLocation } from '../../../types/unit';\n\ntype LocationMapProps = {\n    location: GeoLocation;\n    id: string;\n};\n\ntype Props = {\n    text: string;\n    lat: number;\n    lng: number;\n}\n\nconst AnyReactComponent: React.FC<Props> = (props) => <div>{props.text}</div>\n\nconst LocationMap: React.FC<LocationMapProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Location</S.Header>\n                </Grid>\n                <Grid item xs={12} style={{ height: '50vh' }}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: 'AIzaSyDGVrzNW2FhUWk0-ompNE_KNcJdUT9_z4c' }}\n                        defaultCenter={{lat: props.location.latitude, lng: props.location.longitude}}\n                        defaultZoom={11}\n                    >\n                        <AnyReactComponent\n                            lat={props.location.latitude}\n                            lng={props.location.longitude}\n                            text={props.id}\n                        />\n                    </GoogleMapReact>\n               </Grid>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default LocationMap;","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../stores/';\nimport { fetchUnit } from '../../../stores/unit';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport UnitInfo from '../../../components/BatteryUnit/Unit/UnitInfo';\nimport UnitPerformance from '../../../components/BatteryUnit/Unit/UnitPerformance';\nimport CustomerInfo from '../../../components/BatteryUnit/Unit/CustomerInfo';\nimport LocationMap from '../../../components/BatteryUnit/Unit/LocationMap';\n\ntype UnitProps = {} & RouteComponentProps<{id: string}>;\n\nconst Unit: React.FC<UnitProps> = props => {\n    const dispatch = useDispatch();\n    const unit = useSelector((state: RootState) => state.unit.unit);\n    const id: string = props.match.params.id;\n\n    useEffect(() => {\n        console.log('fetching unit data');\n        dispatch(fetchUnit(id));\n    }, []);\n\n    let unitDetail = null;\n    \n    if( unit.id === '') {\n        unitDetail = (<p>loading...</p>);\n    } else {\n        let alertMessage = null;\n        if (unit.requiredAction !== undefined) {\n            alertMessage = (<Alert severity=\"error\">{unit.requiredAction}</Alert>);\n        }\n        unitDetail = (\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={12}>\n                    {alertMessage}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <UnitInfo\n                        requiredAction={unit.requiredAction}\n                        id={unit.id}\n                        modelNumber={unit.profile.modelNumber}\n                        productTypeName={unit.profile.productTypeName}\n                        isPowerOn={unit.status.isPowerOn}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <UnitPerformance\n                        isCharging={unit.status.isCharging}\n                        capacity={unit.status.capacity}\n                        current={unit.status.current}\n                        voltage={unit.status.voltage}\n                        soc={unit.status.soc}\n                        soh={unit.status.soh}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <CustomerInfo\n                        companyName=\"Komatsu\"\n                        industry=\"Heavy Machinery\"\n                        personnelName=\"Taro Yamada\"\n                        email=\"tyamada@hogehoge.co.jp\"\n                        phoneNumber=\"06-2345-1234\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <LocationMap\n                        location={unit.profile.location}\n                        id={unit.id}\n                    />\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        <>\n        {unitDetail}\n        </>\n    );\n}\n\nexport default Unit;","import React from 'react';\nimport {\n  StylesProvider,\n  ThemeProvider as MaterialThemeProvider\n} from '@material-ui/styles';\nimport {\n  ThemeProvider as StyledThemeProvider\n} from 'styled-components';\nimport { withRouter, Switch } from 'react-router-dom';\nimport { ProtectedRoute } from './components/Auth/ProtectedRoute';\nimport theme from './theme';\nimport Layout from './components/Layout/Layout';\nimport Units from './containers/BatteryUnit/Units/Units';\nimport Unit from './containers/BatteryUnit/Unit/Unit';\n\nconst App: React.FC = () => {\n  const routes = (\n    <Switch>\n      <ProtectedRoute exact path='/units' component={Units}/>\n      <ProtectedRoute path='/units/:id' component={Unit}/>\n    </Switch>\n  );\n  return (\n    <StylesProvider injectFirst>\n      <MaterialThemeProvider theme={theme}>\n        <StyledThemeProvider theme={theme}>\n          <Layout>\n            {routes}\n          </Layout>\n        </StyledThemeProvider>\n      </MaterialThemeProvider>\n    </StylesProvider>\n  );\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n// import { Auth0Provider } from '@auth0/auth0-react';\nimport Auth0ProviderWithHistory from '../src/components/Auth/Auth0ProviderWithHistory';\nimport store from './stores/';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Auth0ProviderWithHistory>\n          <App />\n        </Auth0ProviderWithHistory>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}